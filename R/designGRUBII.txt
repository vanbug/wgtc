epdWellsChar[[i]]=lapply(lapply(generIndex[[i]],y=i,geneIndexer),plateIndexer_wells)
epdWells[[i]]=unlist(lapply(lapply(epdWellsChar[[i]],totalWells),length))
print (length(geneClubEPIndex)-i)
}
# index of genes per plate
gener=function(x){return(which(geneClub$MARKER_SYMBOL[geneClubEPIndex[[i]]]==x))}
# variable decalarations
epdChar<-list();ttChar<-list();epdWellsChar<-list();epdWells<-list();epd<-list();tt<-list();generIndex<-list()
# gene and plate Indexing function for a superloop to fetch, gene data per plate
# gives design index per gene
geneIndexer=function(x,y){return(geneClubEPIndex[[y]][x])}
# gives gene index per plate
plateIndexer_EPD=function(x){return(geneClub$EPD_DISTRIBUTE[x])}
plateIndexer_TT=function(x){return(geneClub$TARGETED_TRAP[x])}
plateIndexer_wells=function(x){return(geneClub$EPD_WELL_NAME[x])}
yesSir=function(x){return(which(x=='yes'))}
totalWells=function(x){return(which(!is.na(x)))}
for (i in 1106:1108){
generIndex[[i]]=lapply(unique(geneClub$MARKER_SYMBOL[geneClubEPIndex[[i]]]),gener)
epdChar[[i]]=lapply(lapply(generIndex[[i]],y=i,geneIndexer),plateIndexer_EPD)
epd[[i]]=unlist(lapply(lapply(epdChar[[i]],yesSir),length))
ttChar[[i]]=lapply(lapply(generIndex[[i]],y=i,geneIndexer),plateIndexer_TT)
tt[[i]]=unlist(lapply(lapply(ttChar[[i]],yesSir),length))
epdWellsChar[[i]]=lapply(lapply(generIndex[[i]],y=i,geneIndexer),plateIndexer_wells)
epdWells[[i]]=unlist(lapply(lapply(epdWellsChar[[i]],totalWells),length))
print (length(geneClubEPIndex)-i)
}
gener=function(x){return(which(geneClub$MARKER_SYMBOL[geneClubEPIndex[[i]]]==x))}
# variable decalarations
epdChar<-list();ttChar<-list();epdWellsChar<-list();epdWells<-list();epd<-list();tt<-list();generIndex<-list()
# gene and plate Indexing function for a superloop to fetch, gene data per plate
# gives design index per gene
geneIndexer=function(x,y){return(geneClubEPIndex[[y]][x])}
# gives gene index per plate
plateIndexer_EPD=function(x){return(geneClub$EPD_DISTRIBUTE[x])}
plateIndexer_TT=function(x){return(geneClub$TARGETED_TRAP[x])}
plateIndexer_wells=function(x){return(geneClub$EPD_WELL_NAME[x])}
yesSir=function(x){return(which(x=='yes'))}
totalWells=function(x){return(which(!is.na(x)))}
for (i in length(geneClubEPIndex)){
generIndex[[i]]=lapply(unique(geneClub$MARKER_SYMBOL[geneClubEPIndex[[i]]]),gener)
epdChar[[i]]=lapply(lapply(generIndex[[i]],y=i,geneIndexer),plateIndexer_EPD)
epd[[i]]=unlist(lapply(lapply(epdChar[[i]],yesSir),length))
ttChar[[i]]=lapply(lapply(generIndex[[i]],y=i,geneIndexer),plateIndexer_TT)
tt[[i]]=unlist(lapply(lapply(ttChar[[i]],yesSir),length))
epdWellsChar[[i]]=lapply(lapply(generIndex[[i]],y=i,geneIndexer),plateIndexer_wells)
epdWells[[i]]=unlist(lapply(lapply(epdWellsChar[[i]],totalWells),length))
print (length(geneClubEPIndex)-i)
}
# index of genes per plate
gener=function(x){return(which(geneClub$MARKER_SYMBOL[geneClubEPIndex[[i]]]==x))}
# variable decalarations
epdChar<-list();ttChar<-list();epdWellsChar<-list();epdWells<-list();epd<-list();tt<-list();generIndex<-list()
# gene and plate Indexing function for a superloop to fetch, gene data per plate
# gives design index per gene
geneIndexer=function(x,y){return(geneClubEPIndex[[y]][x])}
# gives gene index per plate
plateIndexer_EPD=function(x){return(geneClub$EPD_DISTRIBUTE[x])}
plateIndexer_TT=function(x){return(geneClub$TARGETED_TRAP[x])}
plateIndexer_wells=function(x){return(geneClub$EPD_WELL_NAME[x])}
yesSir=function(x){return(which(x=='yes'))}
totalWells=function(x){return(which(!is.na(x)))}
for (i in 1:length(geneClubEPIndex)){
generIndex[[i]]=lapply(unique(geneClub$MARKER_SYMBOL[geneClubEPIndex[[i]]]),gener)
epdChar[[i]]=lapply(lapply(generIndex[[i]],y=i,geneIndexer),plateIndexer_EPD)
epd[[i]]=unlist(lapply(lapply(epdChar[[i]],yesSir),length))
ttChar[[i]]=lapply(lapply(generIndex[[i]],y=i,geneIndexer),plateIndexer_TT)
tt[[i]]=unlist(lapply(lapply(ttChar[[i]],yesSir),length))
epdWellsChar[[i]]=lapply(lapply(generIndex[[i]],y=i,geneIndexer),plateIndexer_wells)
epdWells[[i]]=unlist(lapply(lapply(epdWellsChar[[i]],totalWells),length))
print (length(geneClubEPIndex)-i)
}
epdWellsChar[1:10]
epdWells[1]
epdWells[2]
epdWells[1:10]
effs=function(x,y,z){if (z==0){return (rep(0,length(z)))} else {return(((x+y)/z))}}
eff=mapply(effs,tt,epd,epdWells)
eff[1:10]
length(which(geneClub$EPD_DISTRIBUTE[geneClubEPIndex[[4]][generIndex[[4]][[1]]]]=='yes'))
length(which(geneClub$EPD_DISTRIBUTE[geneClubEPIndex[[4]][generIndex[[4]][[2]]]]=='yes'))
length(generIndex[[4]])
eff[1:10]
lapply(eff,ave)
lapply(eff[1],ave)
#lapply(eff[1],ave)
eff[[1187]]
length(unlist(eff))
which(unlist(eff)=="NaN")
eff[which(unlist(eff)=="NaN")]
eff[which(unlist(eff)=="NaN")]=0
#eff=mapply(effs,tt,epd,epdWells)
effs=function(x,y,z){if (z==0){return (rep(0,length(z)))} else {return(((x+y)/z))}}
eff=mapply(effs,tt,epd,epdWells)
eff[which(unlist(eff)=="NaN")]=0
eff
eff[[1]]
eff[[1000]]
eff[[1189]]
effeffs=function(x,y,z){if (z==0){return (rep(0,length(z)))} else {return(((x+y)/z))}}
eff=mapply(effs,tt,epd,epdWells)
unlist(eff)[which(unlist(eff)=="NaN")]
unlist(eff)[which(unlist(eff)=="NaN")]=0
(unlist(eff)[which(unlist(eff)=="NaN")])=0
unlist(eff)[which(unlist(eff)=="NaN")]
gsub(unlist(eff)[which(unlist(eff)=="NaN")])
gsub('NaN',0,unlist(eff)[which(unlist(eff)=="NaN")])
gsub('NaN',as.numeric(0),unlist(eff)[which(unlist(eff)=="NaN")])
#gsub('NaN',as.numeric(0),unlist(eff)[which(unlist(eff)=="NaN")])
which(unlist(eff)=="NaN")
#gsub('NaN',as.numeric(0),unlist(eff)[which(unlist(eff)=="NaN")])
gsub('NaN',as.numeric(0),unlist(eff)[which(unlist(eff)=="NaN")])
which(unlist(eff)=="NaN")
#lapply()
NaN=function(x){return(x[which(x=="NaN")])}
NaNa=function(x){return(x[which(x=="NaN")])}
lapply(eff,NaNa)
lapply(unlist(eff),NaNa)
#lapply(unlist(eff),NaNa)
eff[[1]]
eff[[1187]]
NaNa(eff[[1187]])
NaNa=function(x){return(x[which(x=="NaN")]=0)}
NaNa=function(x){return(x[which(x=="NaN")])}
NaNa(eff[[1187]])
NaNa=function(x){return(which(x=="NaN"))}
NaNa(eff[[1187]])
lapply(eff,NaNa)
lapply(eff[1:5],NaNa)
lapply(eff[1180:1185],NaNa)
lapply(eff[1180:1188],NaNa)
unlist(lapply(eff[1180:1188],NaNa))
nai=lapply(eff,NaNa)
nai
so=function(x){return(eff[x])}
lapply(nai[1175:1178],so)
nai[1175]
nai[1178]
eff[5]
unlist(eff)
#which(unlist(eff)==NaN)
eff[[1186]]
eff[[1187]]
epd[1187]
tt[1187]
epdWells[1187]
mapply(effs[1187],tt[1187],epd[1187],epdWells)
mapply(effs,tt[1187],epd[1187],epdWells[1187])
effs=function(x,y,z){return(z)}
mapply(effs,tt[1187],epd[1187],epdWells[1187])
effs=function(x,y,z){if z=0 {return(0)}}
effs=function(x,y,z){if z==0 {return(0)}}
effs=function(x,y,z){if (z==0) {return(0)}}
mapply(effs,tt[1187],epd[1187],epdWells[1187])
tt[1187]
0/0
geneClub[1:10,]
effs[1188]
effs[[1188]]
eff
replace(spec[[1,"wavenumber"]],is.na(spec[[1,"wavenumber"]]),0)
lapply(eff[[1]],yar)
yar=function(x){return(x)}
lapply(eff[[1]],yar)
unlist(lapply(eff[[1]],yar))
which(unlist(lapply(eff[[1]],yar))=='NaN')
which(unlist(lapply(eff[[1176]],yar))=='NaN')
which(unlist(lapply(eff[[1180]],yar))=='NaN')
which(unlist(lapply(eff[[1187]],yar))=='NaN')
eff[which(unlist(lapply(eff[[1187]],yar))=='NaN')]
eff[[1187]][which(unlist(lapply(eff[[1187]],yar))=='NaN')]
eff[[1187]][which(unlist(lapply(eff[[1187]],yar))=='NaN')]=0
length(eff)
for (i in 1:length(eff)){
eff[[i]][which(unlist(lapply(eff[[i]],yar))=='NaN')]=0
}
lapply(eff,NaNa)
eff
# we average the tt, epd and wells to find efficiency per plate
effs=function(x,y,z){if (z==0){return (rep(0))} else {return(((x+y)/z))}}
eff=mapply(effs,tt,epd,epdWells)
effs=function(x,y,z){if (z==0){return (rep(0,length(z)))} else {return(((x+y)/z))}}
eff=mapply(effs,tt,epd,epdWells)
eff
for (i in 1:length(eff)){
eff[[i]][which(unlist(lapply(eff[[i]],yar))=='NaN')]=0
}
eff
lapply(eff,ave)
lapply(eff)
eff
eff[1]
lapply(eff[1],ave)
epdWells
a=data.frame(geneClub$EP_PLATE_NAME,unlist(eff))
a=data.frame(unique(geneClub$EP_PLATE_NAME),unlist(eff))
a=lapply(eff,ave)
lapply(a,tail)
lapply(lapply(a,tail),tail)
lapply(lapply(a,tail)[1],tail)
lapply(lapply(a,tail),tail)
lapply(lapply(a[1],tail),tail)
#lapply(lapply(a,tail),tail)
#lapply(a,function(x)return(tail))
tail(a[[1]],)
tail(a[[1]],1)
lapply(a,function(x)return(tail(x,1)))
#lapply(a,function(x)return(tail(x,1)))
avg
avg=lapply(eff,ave)
e=lapply(avg,function(x)return(tail(x,1)))
e
# we average the tt, epd and wells to find efficiency per plate
effs=function(x,y,z){if (z==0){return (rep(0,length(z)))} else {return(((x+y)/z))}}
eff=mapply(effs,tt,epd,epdWells)
# na remover from efficiency list
for (i in 1:length(eff)){eff[[i]][which(unlist(lapply(eff[[i]],yar))=='NaN')]=0}
# averaging eff
avg=lapply(eff,ave)
effPlate=unlist(lapply(avg,function(x)return(tail(x,1))))
effPlate
max(effPlate)
which(eff<0.1)
which(effPlate<0.1)
plates=data.frame(unique(geneClub$EP_PLATE_NAME,targetingEfficiencies=effPlate))
plates[1:10,]
plates=data.frame(unique(geneClub$EP_PLATE_NAME),targetingEfficiencies=effPlate)
plates[1:10,]
which(plates$targetingEfficiencies<0.1)
plates[which(plates$targetingEfficiencies<0.1),]
rubbishPlates=plates$targetingEfficiencies[which(plates$targetingEfficiencies<0.1)]
rubbishPlates
#rubbishPlates=plates$[which(plates$targetingEfficiencies<0.1)]
plates=data.frame(epPlates=unique(geneClub$EP_PLATE_NAME),targetingEfficiencies=effPlate)
rubbishPlates=plates$targetingEfficiencies[which(plates$targetingEfficiencies<0.1)]
rubbishPlates
plot(rubbishPlates)
rubbishPlates=plates$epPlates[which(plates$targetingEfficiencies<0.1)]
rubbishPlates
geneClubEPIndex[1]
geneClubEPIndex[2]
rubbishGenes=function(x){return(geneClubEPIndex[x])}
rubGenes=geneClub$MARKER_SYMBOL[unlist(rubbishGenes(rubbishPlates))]
rubGenes
geneClubEPIndex[rubbishPlates[1]]
rubbishPlates[1]
geneClubEPIndex[1]
eff
unlist(eff)
unique(geneClub$MARKER_SYMBOL)[1:5]
unique(geneClub$MARKER_SYMBOL[geneClubEPIndex[1]])
unique(geneClub$MARKER_SYMBOL[geneClubEPIndex[[1]]])
unique(geneClub$MARKER_SYMBOL[geneClubEPIndex[[2]]])
gur=function(x){return(geneClub$MARKER_SYMBOL[x])}
lapply(geneClubEPIndex[[1]],gur)
#lapply(geneClubEPIndex[1],gur)
gur=function(x){return(unique(geneClub$MARKER_SYMBOL[x]))}
lapply(geneClubEPIndex[1],gur)
lapply(geneClubEPIndex[1:2],gur)
uniqGenesperPlate=lapply(geneClubEPIndex,gur)
uniqGenesperPlate
#uniqGenesperPlate=lapply(geneClubEPIndex,gur)
a=data.frame(unlist(uniqGenesperPlate),unlist(eff))
a[1:10,]
#geneClub$DESIGN_ID
dora=function(x){return(unique(geneClub$DESIGN_ID[x]))}
lapply(geneClubEPIndex[1:2],dora)
#lapply(geneClubEPIndex[1:2],dora)
uniqGenes=function(x){return(unique(geneClub$MARKER_SYMBOL[x]))}
uniqGenesperPlate=lapply(geneClubEPIndex,uniqGenes)
uniqID=function(x){return(unique(geneClub$DESIGN_ID[x]))}
uniqIDperPlate=lapply(geneClubEPIndex,uniqD)
uniqGenes=function(x){return(unique(geneClub$MARKER_SYMBOL[x]))}
uniqGenesperPlate=lapply(geneClubEPIndex,uniqGenes)
uniqID=function(x){return(unique(geneClub$DESIGN_ID[x]))}
uniqIDperPlate=lapply(geneClubEPIndex,uniqID)
length(uniqIDperPlate)
length(unlist(uniqIDperPlate))
length(unlist(uniqGenesperPlate))
length(unlist(uniqID[1:100]))
length(unlist(uniqIDperPlate[1:100]))
#length(unlist(uniqIDperPlate[1:100]))
length(unlist(uniqGenesperPlate[1:100]))
length(unlist(uniqIDperPlate[1:1000]))
length(unlist(uniqGenesperPlate[1:1000]))
length(unlist(uniqIDperPlate[500:1000]))
length(unlist(uniqGenesperPlate[500:1000]))
length(unlist(uniqGenesperPlate[900:1000]))
length(unlist(uniqGenesperPlate[900:1000]))
length(unlist(uniqGenesperPlate[600:800]))
length(unlist(uniqGenesperPlate[600:800]))
length(unlist(uniqGenesperPlate[500:600]))
length(unlist(uniqGenesperPlate[500:700]))
length(unlist(uniqIDperPlate[500:700]))
length(unlist(uniqGenesperPlate[600:700]))
length(unlist(uniqIDperPlate[600:700]))
length(unlist(uniqGenesperPlate[550:600]))
length(unlist(uniqIDperPlate[550:600]))
length(unlist(uniqIDperPlate[570:600]))
length(unlist(uniqIDperPlate[570:600]))
length(unlist(uniqIDperPlate[555:560]))
length(unlist(uniqGenesperPlate[555:560]))
length(unlist(uniqGenesperPlate[550:570]))
length(unlist(uniqIDperPlate[550:570]))
length(unlist(uniqGenesperPlate[550:600]))
length(unlist(uniqIDperPlate[550:600]))
uniqGenesperPlate[550:600]
#length(unlist(uniqIDperPlate[550:600]))
uniqIDperPlate[550:600]
uniqGenes=function(x){return(length(unique(geneClub$MARKER_SYMBOL[x])))}
uniqID=function(x){return(length(unique(geneClub$DESIGN_ID[x])))}
a=lapply(geneClubEPIndex,uniqGenes)
b=lapply(geneClubEPIndex,uniqID)
a
unlist(a)
unlist(b)-unlist(a)
unlist(b)
diff(a,b)
#diff(a,b)
b=unlist(b)
a=unlist(a)
a
b
b-a
a-b
length(b)
length(a)
lapply(geneClubEPIndex[1],uniqID)
length(unlist(lapply(geneClubEPIndex,uniqGenes)))
length(lapply(geneClubEPIndex,uniqID))
uniqGenes=function(x){return(unique(geneClub$MARKER_SYMBOL[x]))}
uniqGenesperPlate=lapply(geneClubEPIndex,uniqGenes)
uniqID=function(x){return(unique(geneClub$DESIGN_ID[x]))}
uniqIDperPlate=lapply(geneClubEPIndex,uniqID)
lapply(uniqIDperPlate,length)
unlist(lapply(uniqIDperPlate,length))
unlist(lapply(uniqGenesperPlate,length))
sum(unlist(lapply(uniqIDperPlate,length)))
sum(unlist(lapply(uniqGenesperPlate,length))(
)
sum(unlist(lapply(uniqGenesperPlate,length)))
unlist(lapply(uniqIDperPlate,length))-unlist(lapply(uniqGenesperPlate,length)
)
unlist(lapply(uniqIDperPlate,length))-unlist(lapply(uniqGenesperPlate,length))
which(unlist(lapply(uniqIDperPlate,length))-unlist(lapply(uniqGenesperPlate,length))!=0)
uniqGenesperPlate[325]
#uniqGenesperPlate[325]
uniqGenesperPlate[c(325,582,628)]
#uniqGenesperPlate[c(325,582,628)]
#uniqIDperPlate[c(325,582,628)]
uniqGenesperPlate[c(325,582,628)]
uniqIDperPlate[c(325,582,628)]
geneClub[geneClubEPIndex]
geneClub[geneClubEPIndex[c(325,582,628)],2]
geneClub[geneClubEPIndex[[c(325,582,628)]],2]
geneClub[geneClubEPIndex[325],2]
geneClub[geneClubEPIndex[[325]],2]
geneClub[geneClubEPIndex[[325]],]
geneClub[geneClubEPIndex[[325]],1:"]
geneClub[geneClubEPIndex[[325]],1:2]
geneClub[geneClubEPIndex[[325]],1:2][100:200]
geneClub[geneClubEPIndex[[325]],1:2]
geneClub[geneClubEPIndex[[325]][1:100],1:2]
geneClub[geneClubEPIndex[[325]][200:300],1:2]
geneClub[geneClubEPIndex[[325]][350:500],1:2]
geneClub[geneClubEPIndex[[325]][310:400],1:2]
geneClub[geneClubEPIndex[[325]][320:360],1:2]
geneClub[geneClubEPIndex[[325]][320:365],1:2]
geneClub[geneClubEPIndex[[325]][320:370],1:2]
geneClub[geneClubEPIndex[[325]][320:375],1:2]
geneClub[geneClubEPIndex[[325]][320:80],1:2]
geneClub[geneClubEPIndex[[325]][320:380],1:2]
geneClub[geneClubEPIndex[[325]][320:381],1:2]
geneClub[geneClubEPIndex[[325]][320:381],1:3]
geneClub[geneClubEPIndex[[325]][320:381],1:4]
which(geneClub$DESIGN_ID==112489)
geneClub$MARKER_SYMBOL[which(geneClub$DESIGN_ID==112489)]
length(which(is.na(geneClub$EPD_WELL_NAME)))
geneClub[112359,]
length(which(geneClub$DESIGN_ID==112489&&is.na(geneClub$EPD_WELL_NAME)))
length(which(geneClub$DESIGN_ID==112489&&geneClub$EP_PLATE_NAME==EP00252))
length(which(geneClub$DESIGN_ID==112489&&geneClub$EP_PLATE_NAME=='EP00252'))
which(geneClub$DESIGN_ID==112489&&geneClub$EP_PLATE_NAME=='EP00252')
which(geneClub$DESIGN_ID==112489)
geneClub[geneClubEPIndex[[325]][320:381],1:4]
geneClub[geneClubEPIndex[[325]][340:381],1:4]
geneClub[geneClubEPIndex[[325]][341:381],1:4]
geneClub[geneClubEPIndex[[325]][341,]
geneClub[geneClubEPIndex[[325]][320:381],1:4]
geneClub[geneClubEPIndex[[325]][341],1:4]
geneClub[-geneClubEPIndex[[325]][341],1:4]
geneClub=geneClub[-geneClubEPIndex[[325]][341],]
#geneClub=geneClub[-geneClubEPIndex[[325]][341],]
geneClubEPIndex[[582]]
geneClub]geneClubEPIndex[[582]],]
geneClub[geneClubEPIndex[[582]]],]
geneClub[geneClubEPIndex[[582]],]
geneClub[geneClubEPIndex[[582]][1:100],1:2]
geneClub[geneClubEPIndex[[582]][1:1000],1:2]
geneClub[geneClubEPIndex[[582]][1:100],1:2]
geneClub[geneClubEPIndex[[582]][1:200],1:2]
geneClub[geneClubEPIndex[[582]][201:400],1:2]
geneClub[geneClubEPIndex[[582]]]
geneClub$EP_P[geneClubEPIndex[[582]]]
geneClub[geneClubEPIndex[[582]],1:2]
geneClub$MARKER_SYMBOL[geneClubEPIndex[[582]]]
unique(geneClub$MARKER_SYMBOL[geneClubEPIndex[[582]]])
eff[582]
geneClub[geneClubEPIndex[[582]][201:400],1:2]
#eff[582]
geneClub$MARKER_SYMBOL[geneClubEPIndex[[582]]]
unique(geneClub$MARKER_SYMBOL[geneClubEPIndex[[582]]])
eff[582]
which(geneClub$MARKER_SYMBOL[geneClubEPIndex[[582]]]=='Hnf4g')
geneClub$MARKER_SYMBOL[geneClubEPIndex[[582]]][which(geneClub$MARKER_SYMBOL[geneClubEPIndex[[582]]]=='Hnf4g')]
geneClub[geneClubEPIndex[[582]]][which(geneClub$MARKER_SYMBOL[geneClubEPIndex[[582]]]=='Hnf4g'),]
geneClub[geneClubEPIndex[[582]],][which(geneClub$MARKER_SYMBOL[geneClubEPIndex[[582]]]=='Hnf4g')]
geneClub[geneClubEPIndex[[582]]][which(geneClub$MARKER_SYMBOL[geneClubEPIndex[[582]]]=='Hnf4g'),]
geneClub[geneClubEPIndex[[582]]][which(geneClub$MARKER_SYMBOL[geneClubEPIndex[[582]]]=='Hnf4g')]
geneClub[geneClubEPIndex[[582]][which(geneClub$MARKER_SYMBOL[geneClubEPIndex[[582]]]=='Hnf4g')],]
length(which(geneClub$DESIGN_ID=='39941'))
#geneClub[geneClubEPIndex[[582]][which(geneClub$MARKER_SYMBOL[geneClubEPIndex[[582]]]=='Hnf4g')],]
which(unlist(lapply(uniqIDperPlate,length))-unlist(lapply(uniqGenesperPlate,length))!=0)
geneClub[geneClubEPIndex[[582]][which(geneClub$MARKER_SYMBOL[geneClubEPIndex[[582]]]=='Hnf4g')],]
#geneClub[-geneClubEPIndex[[325]][341],1:4]
##geneClub[-geneClubEPIndex[[325]][341],1:4]
geneClub[geneClubEPIndex[[325]][341],1:4]
geneClub[geneClubEPIndex[[582]][341],1:4]
geneClub[geneClubEPIndex[[582]][200:400],1:4]
geneClub[geneClubEPIndex[[582]][210:250],1:4]
geneClub[geneClubEPIndex[[582]][211:225],1:4]
geneClub[geneClubEPIndex[[582]][211:229],1:4]
geneClub[geneClubEPIndex[[582]][211:220],1:4]
geneClub[geneClubEPIndex[[582]][211:230],1:4]
geneClub[geneClubEPIndex[[582]][211:235],1:4]
geneClub[geneClubEPIndex[[582]][211:240],1:4]
geneClub[geneClubEPIndex[[582]][211:236],1:4]
geneClub[geneClubEPIndex[[582]][216:236],1:4]
geneClub[geneClubEPIndex[[582]][217:236],1:4]
geneClub[geneClubEPIndex[[582]][217:229],1:4]
geneClub[geneClubEPIndex[[582]][217:226],1:4]
geneClub[geneClubEPIndex[[582]][217:225],1:4]
geneClub=geneClub[-geneClubEPIndex[[582]][217:225],]
#geneClub=geneClub[-geneClubEPIndex[[582]][217:225],]
geneClub[-geneClubEPIndex[[582]][217:225],]
geneClub[geneClubEPIndex[[628]][1:225],]
geneClub[geneClubEPIndex[[628]][1:225],1:2]
geneClub[geneClubEPIndex[[628]][170:215],1:2]
geneClub[geneClubEPIndex[[628]][160:215],1:2]
geneClub[geneClubEPIndex[[628]][150:215],1:2]
geneClub[geneClubEPIndex[[628]][151:215],1:2]
geneClub[geneClubEPIndex[[628]][151:214],1:2]
geneClub[geneClubEPIndex[[628]][151:214],1:4]
geneClub[geneClubEPIndex[[628]][151:214],1:5]
k=geneClub[geneClubEPIndex[[628]][151:214],]
k[order(k$DESIGN_ID),]
k=k[order(k$DESIGN_ID),]
which(k$DESIGN_ID==82766)
which(k$DESIGN_ID=='82766')
which(k$DESIGN_ID==82786)
k1=k[which(k$DESIGN_ID==82786),]
k2=k[which(!k$DESIGN_ID==82786),]
k1
k2
length(which(k1$EPD_DISTRIBUTE=='yes'))
length(which(k2$EPD_DISTRIBUTE=='yes'))
#length(which(k2$EPD_DISTRIBUTE=='yes'))
length(which(k2$EPD_DISTRIBUTE=='yes'))
length(which(k2$TARGETED_TRAP=='yes'))
length(which(k1$TARGETED_TRAP=='yes'))
k2
geneClub[geneClubEPIndex[[628]][151:214],]
geneClub[geneClubEPIndex[[628]][151:214],1:2]
geneClub[geneClubEPIndex[[628]][151:160],1:2]
geneClub[geneClubEPIndex[[628]][151:162],1:2]
geneClub[geneClubEPIndex[[628]][151:160],1:2]
geneClub=geneClub[-geneClubEPIndex[[628]][151:160],]
geneClub[geneClubEPIndex[[628]][151:160],1:2]
geneClub[geneClubEPIndex[[628]][160:1180],1:2]
geneClub[geneClubEPIndex[[628]][160:180],1:2]
geneClub[geneClubEPIndex[[628]][170:180],1:2]
geneClub[geneClubEPIndex[[628]][171:180],1:2]
geneClub[geneClubEPIndex[[628]][171:177],1:2]
geneClub[geneClubEPIndex[[628]][171:178],1:2]
geneClub[geneClubEPIndex[[628]][171:177],1:2]
geneClub=geneClub[-geneClubEPIndex[[628]][171:177],]
length(geneClub$DESIGN_ID)
geneClub[-geneClubEPIndex[[628]][171:177],]
geneClub[geneClubEPIndex[[628]][171:185],1:2]
geneClub[geneClubEPIndex[[628]][181:214],1:2]
geneClub[geneClubEPIndex[[628]][183:214],1:2]
geneClub[geneClubEPIndex[[628]][182:214],1:2]
geneClub[geneClubEPIndex[[628]][183:214],1:2]
geneClub[geneClubEPIndex[[628]][183:204],1:2]
geneClub[geneClubEPIndex[[628]][183:198],1:2]
geneClub[geneClubEPIndex[[628]][183:197],1:2]
geneClub=geneClub[-geneClubEPIndex[[628]][183:197],]
uniqGenes=function(x){return(unique(geneClub$MARKER_SYMBOL[x]))}
uniqGenesperPlate=lapply(geneClubEPIndex,uniqGenes)
uniqID=function(x){return(unique(geneClub$DESIGN_ID[x]))}
uniqIDperPlate=lapply(geneClubEPIndex,uniqID)
sameGeneMultiID=which(unlist(lapply(uniqIDperPlate,length))-unlist(lapply(uniqGenesperPlate,length))!=0)
sameGeneMultiID
#as.data.frame(geneClub)
#unique(geneClub$MARKER_SYMBOL[geneClubEPIndex[[2]]])
#data.frame()
uniqIDperPlate[1:2]
yoClub=data.frame(designID=unlist(uniqIDperPlate),genes=unlist(uniqGenesperPlate)
)
yoClub[1:10,]
yoClub=data.frame(designID=unlist(uniqIDperPlate),genes=unlist(uniqGenesperPlate),efficiencies=unlist(eff))
savehistory('workspace/ikmc_targeting_efficiencies/codes/R/designGRUBII.txt')
