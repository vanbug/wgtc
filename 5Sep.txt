o[1302140:1302160]
length(o)
#o=table(geneEPref[1],geneClubs$EP_PLATE_NAME[1])
l=geneClubs$EP_PLATE_NAME[1]
l
o=table(geneEPref[1],l)
o
k=geneEPref[1]
table(l,k)
levels(k)
levels(k)=k
levels(k)=''
subset(geneClubs,!duplicated(geneEPref))
k=subset(geneClubs,!duplicated(geneEPref))
str(k)
k=subset(geneClubs$EP_PLATE_NAME,!duplicated(geneEPref))
str(k)
k=subset(geneClubs$EP_PLATE_NAME,duplicated(geneEPref))
str(k)
k=subset(duplicated(geneClubs$EP_PLATE_NAME))
k=subset(geneEPref,duplicated(geneClubs$EP_PLATE_NAME))
str(k)
k
unique(k)
k=with(subset(geneEPref,duplicated(geneClubs$EP_PLATE_NAME)))
k=with(subset(geneEPref,duplicated(geneClubs$EP_PLATE_NAME)),table(geneEPref))
savehistory(file='Rhist')
q()
ls()
rm(kita,tt,l,k,co,a,ht,o)
ls()
epF[1:10,]]
epF[1:10,]
rap=function(x){return(which(x==k,arr.ind=TRUE))}
epPlateNameIndex=lapply(unique(geneClubs$EP_PLATE_NAME),rap)
k=unique(geneClubs$EP_PLATE_NAME)
epPlateNameIndex=lapply(unique(geneClubs$EP_PLATE_NAME),rap)
epPlateNameIndex
history()
savehistory(file='workspace/ikmc_targeting_efficiencies/hist.txt')
geneEPref=unique(geneClubs$EP_PLATE_NAME)[1:10]
a<-function(x,y){return(which(x==y))}
a(geneEPref,geneClubs$EP_PLATE_NAME)
k=geneClubs$EP_PLATE_NAME
lapply(unique(geneClubs$EP_PLATE_NAME),rap)
rap=function(x){return(which(x==geneClubs$EP_PLATE_NAME,arr.ind=TRUE))}
epPlateNameIndex=lapply(unique(geneClubs$EP_PLATE_NAME),rap)
epPlateNameIndex
unlist(lapply(epPlateNameIndex,length))
lapply(epPlateNameIndex,naive)
naive<-function(x){return(geneClubs[x,])}
lapply(epPlateNameIndex[1:5],naive)
epPlates=lapply(epPlateNameIndex,naive)
length(epPlates)
epPlates
#geneClubs[order()]
geneClubs[1:10,]
geneClubs[order(EP_PLATE_NAME),][1:10]
geneClubs[order(geneClubs$EP_PLATE_NAME),][1:10]
geneClubs[order(geneClubs$EP_PLATE_NAME),]
length(geneClubs[order(geneClubs$EP_PLATE_NAME),])
length(geneClubs[order(geneClubs$EP_PLATE_NAME),1])
length(geneClubs$EP_PLATE_NAME)
#geneClubsEP=geneClubs[order(geneClubs$EP_PLATE_NAME),1]
geneClubs[order(geneClubs$EP_PLATE_NAME),]
geneClubsEP=geneClubs[order(geneClubs$EP_PLATE_NAME),]
rap=function(x){return(which(x==geneClubs$EP_PLATE_NAME,arr.ind=TRUE))}
epPlateNameIndex=lapply(unique(geneClubs$EP_PLATE_NAME),rap)
geneClubs[epPlateNameIndex,]
lapply(epPlateNameIndex,naive)
#lapply(epPlateNameIndex,naive)
genesperEP=lapply(epPlateNameIndex,naive)
genesperEP
genesperEP[1,]
genesperEP[,1]
genesperEP[[1]]
#genesperEP[[1]]gEPeff=function(x){return((x$EPD_DISTRIBUTE+x$TARGETED_TRAP)/x$EPD_WELL_NAME)}
gEPeff=function(x){return((x$EPD_DISTRIBUTE+x$TARGETED_TRAP)/x$EPD_WELL_NAME)}
gEPeff(genesperEP[[1]])
gEPeffIndex=lapply(genesperEP,gEPeff)
gEPeffIndex
gEPeffIndex
lapply(gEPeffIndex,sum)
gEPeffIndex
lapply(gEPeffIndex,is.na)
which(lapply(gEPeffIndex,is.na)==TRUE)
lapply(lapply(gEPeffIndex,is.na),function(x){which(is.na(x)==TRUE)})
lapply(lapply(gEPeffIndex,is.na),function(x){which(x=="NaN")})
lapply(lapply(gEPeffIndex,is.na),function(x){which(x=="NaN")})
#lapply(lapply(gEPeffIndex,is.na),function(x){which(x=="NaN")})
a=function(x){which(x=="NaN")}
lapply(gEPeffIndex,is.na)
b=lapply(gEPeffIndex,is.na)
b[[1]]
b[[1170]]
a(b[[1170]])
a=function(x){which(x==TRUE)}
a(b[[1170]])
a=function(x){which(x=="TRUE")}
a(b[[1170]])
which(b[[1170]])
which(b[[1170]]==FALSE)
lapply(lapply(gEPeffIndex,is.na),function(x){which(x=="TRUE")}
)
lapply(lapply(gEPeffIndex,is.na),function(x){which(x=="TRUE")})
gEPeffIndex[lapply(lapply(gEPeffIndex,is.na),function(x){which(x=="TRUE")})]
gEPeffIndex[lapply(lapply(gEPeffIndex,is.na),function(x){which(x=="TRUE")}),]
lapply(lapply(gEPeffIndex,is.na),function(x){which(x=="TRUE")})
genesperEP[lapply(lapply(gEPeffIndex,is.na),function(x){which(x=="TRUE")})]
genesperEP[lapply(lapply(gEPeffIndex,is.na),function(x){which(x=="TRUE")}),]
genesperEP
gEPeff=function(x){
eff=(x$EPD_DISTRIBUTE+x$TARGETED_TRAP)/x$EPD_WELL_NAME
if eff=="NaN"{eff=0}
return(eff)}
gEPeff=function(x){
eff=(x$EPD_DISTRIBUTE+x$TARGETED_TRAP)/x$EPD_WELL_NAME
if eff=="NaN"{eff=0}
return(eff)}
gEPeff=function(x){
eff=(x$EPD_DISTRIBUTE+x$TARGETED_TRAP)/x$EPD_WELL_NAME
if eff=="NaN" {eff=0}
return(eff)
}
eff=c()
gEPeff=function(x){
eff=(x$EPD_DISTRIBUTE+x$TARGETED_TRAP)/x$EPD_WELL_NAME
if eff=="NaN" {eff=0}
return(eff)
}
gEPeff=function(x){
eff=(x$EPD_DISTRIBUTE+x$TARGETED_TRAP)/x$EPD_WELL_NAME
return (eff)
}
gEPeffIndex=lapply(genesperEP,gEPeff)
gEPeffIndex
gEPeff=function(x){
eff=(x$EPD_DISTRIBUTE+x$TARGETED_TRAP)/x$EPD_WELL_NAME
if (eff=="NaN") print ("yo")
return (eff)
}
lapply(genesperEP,gEPeff)
gEPeff=function(x){
eff=(x$EPD_DISTRIBUTE+x$TARGETED_TRAP)/x$EPD_WELL_NAME
if (eff=="NaN") eff=0
return (eff)
}
gEPeffIndex=lapply(genesperEP,gEPeff)
gEPeffIndex
gEPeff=function(x){
if (x$EPD_WELL_NAME==0){eff=0} else
eff=(x$EPD_DISTRIBUTE+x$TARGETED_TRAP)/x$EPD_WELL_NAME
return (eff)
}
lapply(genesperEP,gEPeff)
genesperEP
genesperEP[[1]]$EPD_WELL_NAME
gEPeff=function(x){
if (x$EPD_WELL_NAME=='0'){eff=0} else
eff=(x$EPD_DISTRIBUTE+x$TARGETED_TRAP)/x$EPD_WELL_NAME
return (eff)
}
lapply(genesperEP,gEPeff)
genesperEP[[1186]]
gEPeff=function(x){
if (x$EPD_WELL_NAME=='0'){return (0) else
return((x$EPD_DISTRIBUTE+x$TARGETED_TRAP)/x$EPD_WELL_NAME)
}gEPeff=function(x){
if (x$EPD_WELL_NAME=='0'){return (0) else
return((x$EPD_DISTRIBUTE+x$TARGETED_TRAP)/x$EPD_WELL_NAME)
gEPeff=function(x){
if (x$EPD_WELL_NAME=='0'){return (0) else
return((x$EPD_DISTRIBUTE+x$TARGETED_TRAP)/x$EPD_WELL_NAME)
}
gEPeff=function(x){
if (x$EPD_WELL_NAME=='0'){return (0)} else
return((x$EPD_DISTRIBUTE+x$TARGETED_TRAP)/x$EPD_WELL_NAME)
}
lapply(genesperEP,gEPeff)
gEPeff=function(x){
if (x$EPD_WELL_NAME==0){return (0)} else
return((x$EPD_DISTRIBUTE+x$TARGETED_TRAP)/x$EPD_WELL_NAME)
}
lapply(genesperEP,gEPeff)
gEPeff=function(x){return((x$EPD_DISTRIBUTE+x$TARGETED_TRAP)/x$EPD_WELL_NAME)}
lapply(genesperEP,gEPeff)
lapply(gEPeffIndex,function(x){which(x=='NaN')})
unlist(lapply(gEPeffIndex,function(x){which(x=='NaN')}))
lapply(gEPeffIndex,function(x){which(x=='NaN')})
a=lapply(gEPeffIndex,function(x){which(x=='NaN')})
b=lapply(gEPeffIndex,function(x){which(x=='NaN')})
b
#lapply(b,)
gEPeffIndex[b[[1]]]
gEPeffIndex[[1]][b[[1]]]
gEPeffIndex[[1]]
gEPeffIndex[[1176]][b[[1176]]]
lapply(b,function(x){return(gEPeffIndex[[b]])})
lapply(b,function(x){return(gEPeffIndex[b])})
#lapply(b,function(x){return(gEPeffIndex[b])})
table(b)
b
lapply(b,which)
lapply(b,function(x){which(x=='')})
lapply(b,function(x){which(length(x)>0)})
geneClubs[1,]
genesperEP
gEPeff=function(x){
if (x$EPD_DISTRIBUTE==0) return("hello") else
return((x$EPD_DISTRIBUTE+x$TARGETED_TRAP)/x$EPD_WELL_NAME)
}
lapply(genesperEP[1],gEPeff)
gEPeff=function(x){
if (x$EPD_DISTRIBUTE=='0') return("hello") else
return((x$EPD_DISTRIBUTE+x$TARGETED_TRAP)/x$EPD_WELL_NAME)
}
lapply(genesperEP,gEPeff)
lapply(genesperEP[1186],gEPeff)
genesperEP[1186]
gEPeff=function(x){
if (x$EPD_WELL_NAME='0') return("hello") else
return((x$EPD_DISTRIBUTE+x$TARGETED_TRAP)/x$EPD_WELL_NAME)
}
gEPeff=function(x){
if (x$EPD_WELL_NAME='0') return("hello") else
return((x$EPD_DISTRIBUTE+x$TARGETED_TRAP)/x$EPD_WELL_NAME)
}
gEPeff=function(x){
if (x$EPD_WELL_NAME=='0') return("hello") else
return((x$EPD_DISTRIBUTE+x$TARGETED_TRAP)/x$EPD_WELL_NAME)
}
lapply(genesperEP[1186],gEPeff)
gEPeff=function(x){
if (x$EPD_WELL_NAME==0) return("hello") else
return((x$EPD_DISTRIBUTE+x$TARGETED_TRAP)/x$EPD_WELL_NAME)
}
 lapply(genesperEP[1186],gEPeff)
gEPeff=function(x){
if (x$EPD_WELL_NAME==0) return("hello") else
return(x$EPD_WELL_NAME)
}
 lapply(genesperEP[1186],gEPeff)
gEPeff=function(x){
if (x$EPD_WELL_NAME==0) return("hello") else
}
gEPeff=function(x){
if (x$EPD_WELL_NAME==0) return("hello")
}
lapply(genesperEP[1186],gEPeff)
[[1]]
lapply(genesperEP[1186],gEPeff)
[[1]]
lapply(genesperEP[1186],gEPeff)
gEPeff=function(x){
if (x$EPD_WELL_NAME=0) return("hello")
}
gEPeff=function(x){
if (x$EPD_WELL_NAME=0) return("hello")
}
gEPeff=function(x){
if (length(x$EPD_WELL_NAME)==0) return("hello")
}
lapply(genesperEP,gEPeff)
gEPeff=function(x){
if (length(x$EPD_WELL_NAME)==1) return("hello")
}
lapply(genesperEP,gEPeff)
gEPeff=function(x){
if (x$EPD_WELL_NAME==144) return("hello")
}
lapply(genesperEP,gEPeff)
q()
geneClubsEP=geneClubs[order(geneClubs$EP_PLATE_NAME),]
rap=function(x){return(which(x==geneClubsEP$EP_PLATE_NAME,arr.ind=TRUE))}
epPlateNameIndex=lapply(unique(geneClubsEP$EP_PLATE_NAME),rap)
epPlateIndex=unlist(lapply(epPlateNameIndex,length))
epPlateName=data.frame(epPlateNames=as.character(unique(geneClubsEP$EP_PLATE_NAME)),epCounts=epPlateIndex)
epPlateName[1:10,]
unwindEPDwell=function(x){return(sum(geneClubsEP$EPD_WELL_NAME[unlist(x)]))}
unwindEPDDis=function(x){return(sum(geneClubsEP$EPD_DISTRIBUTE[unlist(x)]))}
unwindEPDTT=function(x){return(sum(geneClubsEP$TARGETED_TRAP[unlist(x)]))}
epPlateNameIndex[1:10]
geneClubEPDWELL=unlist(lapply(epPlateNameIndex,unwindEPDwell))
geneClubEPDWELL[1:10]
naive<-function(x){return(geneClubsEP[x,])}
genesperEP=lapply(epPlateNameIndex,naive)
genesperEP[1]
gEPeff=function(x){return((x$EPD_DISTRIBUTE+x$TARGETED_TRAP)/x$EPD_WELL_NAME)}
gEPeffIndex=lapply(genesperEP,gEPeff)
gEPeffIndex]
gEPeffIndex[1:10]
#which(gEPeffIndex)
?gsub
gsub('NaN',0,gEPeffIndex[[4]])
as.numeric(gsub('NaN',0,gEPeffIndex[[4]]))
replaceNaN=function(x){return(as.numeric(gsub('NaN',0,x)))}
lapply(gEPeffIndex,replaceNaN)[1:10]
lapply(gEPeffIndex,replaceNaN)[1:100]
#lapply(gEPeffIndex,replaceNaN)[1:100]
gEPeffIndex[96]
geneEff=lapply(gEPeffIndex,replaceNaN)
geneEff
geneClubsEP[1167:1186,]
geneClubsEP[1:100,]
a<-read.table('workspace/ikmc_targeting_efficiencies/tables/MRK_GeneTrap.rpt')
a<-read.table('workspace/ikmc_targeting_efficiencies/tables/MRK_GeneTrap.rpt',sep='\t')
a
a<-read.table('workspace/ikmc_targeting_efficiencies/tables/MRK_GeneTrapII.csv',sep='\t')
a<-read.csv('workspace/ikmc_targeting_efficiencies/tables/MRK_GeneTrapII.csv',sep='\t')
a[1:10,]
a[1,1:10]
a[1,1:20]
str(a)
a<-read.csv('workspace/ikmc_targeting_efficiencies/tables/MRK_GeneTrapII.csv',sep='\t',header=FALSE)
str(a)
a[1:10,]
a[,1:10]
a[1,1:10]
a[1:2,1:10]
a[1:5,1:10]
#gtCols<-a
a[,1:10]
a[1:20,11:20]
#gtCols<-a[,11]
length(colnames(a))
#gtCols<-a[,11:length(colnames(a))]
gtCols<-a[,11:length(colnames(a))]
gtCols[1:10,1:10]
lapply(gtCols[1:10,],length)
lapply(gtCols[,],length)
lapply(gtCols[1,],length)
lapply(gtCols[1,1],length)
lapply(gtCols[,1],length)
gtCols[,1]
gtCols[,1:2]
length(colnames(gtCols[1,]))
length(colnames(gtCols[2,]))
length(colnames(gtCols[5,]))
length(colnames(gtCols[50,]))
length(colnames(gtCols[1000,]))
str(gtCols)
gtCols[1,1:10]
colnames(gtCols[1,1:10])
length(colnames(gtCols[1,1:10]))
length(colnames(gtCols[1,]))
length(colnames(gtCols[13213,]))
gtCols[1:10,]
str(gtCols[1:10,])
str(gtCols[1:10,1:10])
gtCols[1:10,1:10]
gtCols[1,1:10]
gtCols[1,1:100]
levels(gtCols[1,1:100])
factor(gtCols[1,1:100])
table(gtCols[1,1:100])
length(gtCols[1,1:100])
as.list(gtCols[1,1:100])
lapply(as.list(gtCols[1,1:100]),length)
as.list(gtCols[1,1:100])
#lapply(as.list(gtCols[1,1:100]),length)
as.list(gtCols[1,99:100])
length(as.list(gtCols[1,99:100]))
length(as.list(gtCols[1,100]))
is.na(as.list(gtCols[1,100]))
is.character(as.list(gtCols[1,100]))
is.character(as.list(gtCols[1,1:10]))
is.character(as.list(gtCols[1,1]))
as.list(gtCols[1,1])
is.character(gtCols[1,1])
gtColsp[1,1]
gtCols[1,1]
str(gtCols[1,1])
table(gtCols[1,1:100])
a
is.na(gtCols[1,1])
gtCols[1,1]
gtCols[1,100]
is.na(gtCols[1,100])
is.NaN](gtCols[1,100])
is.NaN(gtCols[1,100])
typeof(gtCols[1,100])
typeof(gtCols[1,1])
?colSums
rowSums(gtCols)
colSums(gtCols)
is.null(gtCols[1,100])
is.null(gtCols[1,10])
is.null(gtCols[1,1000])
unlist(gtCols[1,])
#unlist(gtCols[1,])
#unlist(gtCols[2,])
unlist(gtCols[2,1:100])
which(unlist(gtCols[2,1:100]))
which(is.na(unlist(gtCols[2,1:100])))
which(is.null(unlist(gtCols[2,1:100])))
which(is.finite(unlist(gtCols[2,1:100])))
#which(is.finite(unlist(gtCols[2,1:100])))
order(gtCols)
order(gtCols[2,1:100])
?read.csv
b=read.csv('workspace/ikmc_targeting_efficiencies/tables/MRK_GeneTrapII.csv')
#b=read.csv('workspace/ikmc_targeting_efficiencies/tables/MRK_GeneTrapII.csv',)
?read.csv
rownames(gtCols[1,1:10])
gtCols[1,1:10]
gtCols[1,1]
length(gtCols[1,])
#b=read.table('workspace/ikmc_targeting_efficiencies/tables/MRK_GeneTrapII.csv',sep='\t',)
#?read.csv
b=read.table('workspace/ikmc_targeting_efficiencies/tables/MRK_GeneTrapII.csv',sep='\t',blank.lines.skip=TRUE)
b=read.table('workspace/ikmc_targeting_efficiencies/tables/MRK_GeneTrapII.csv',sep='\t',blank.lines.skip=TRUE,strip.white=TRUE)
gtCount<-read.table('workspace/ikmc_targeting_efficiencies/tables/MRK_GeneTrapGT.csv',sep='\t')
gtCount[1:10,]
#gtCount<-read.table('workspace/ikmc_targeting_efficiencies/tables/MRK_GeneTrapGT.csv',sep='')
gtCount<-read.table('workspace/ikmc_targeting_efficiencies/tables/MRK_GeneTrapGT.csv',sep='\t')
gtCount[1:10,]
gtCount<-read.table('workspace/ikmc_targeting_efficiencies/tables/MRK_GeneTrapGT.csv',sep='\t')
gtCount[1:10,]
gtCount<-read.table('workspace/ikmc_targeting_efficiencies/tables/MRK_GeneTrapGT.csv',sep='\t',header=FALSE,blank.lines.skip=TRUE)
gtCount[1<10,]
gtCount[1,10,]
gtCount[1:10,]
gtCount[1:10,1:100]
gtCount[1:10,1]
gtCount[1:10,1:2]
gtCount[1:10,1]
gtCount[1,1]
gtCount[1,10]
gtCount[1,1:100]
length(gtCount[1,1:100])
gtCount<-read.table('workspace/ikmc_targeting_efficiencies/tables/MRK_GeneTrapGT.csv',sep='\t',header=FALSE,na.strings='')
gtCount[1,1]
gtCount[1,1:100]
which(gtCount[1,1:100]=='NA')
which(is.na(gtCount[1,1:100]))
#which(is.na(gtCount[1,1:100]))
which(!is.na(gtCount[1,1:100]))
which(!is.na(gtCount[1:2,1:100]))
which(!is.na(gtCount[1,1:100]))
which(!is.na(gtCount[1,]))
length(which(!is.na(gtCount[1,])))
gtCounts<-function(x){length(which(!is.na(gtCount[x,])))}
gtCounts[1]
gtCounts(1)
gtCounts(2)
gtCounts(3)
length(gtCount)
length(gtCount[,1])
#seq(1,length(gtCount[,1]))
gt=lapply(seq(1,length(gtCount[,1])),gtCounts)
gt
unlist(gt)
gt=unlist(gt)
#data.frame()
MRK_GT=read.csv('MRK_GeneTrap.rpt',sep='\t',header=FALSE)
MRK_GT=read.csv('workspace/ikmc_targeting_efficiencies/tables/MRK_GeneTrap.rpt',sep='\t',header=FALSE)
gts=as.data.frame(MRK_GT$V2,gt)
gts[1:10,]
str(gts)
gt
gts=as.data.frame(MRK_GT$V2,gt)
as.data.frame(MRK_GT$V2,gt)
unique(MRK_GT$V2)
length(unique(MRK_GT$V2))
length(gt)
as.data.frame(genes=MRK_GT$V2,geneTrap=gt)
?as.data.frame
c(genes=MRK_GT$V2,geneTrap=gt)
cbind(genes=MRK_GT$V2,geneTrap=gt)
l=cbind(genes=MRK_GT$V2,geneTrap=gt)

data.frame(genes=MRK_GT$V2,geneTrap=gt)
newGT=data.frame(genes=MRK_GT$V2,geneTrap=gt)
newGT
#write.table(newGT,file='workspace/ikmc_targeting_efficiencies/tables/newGT.csv',sep='\t')
#write.table(newGT,file='workspace/ikmc_targeting_efficiencies/tables/newGT.csv',sep='\t',col.names=colnames(newGT),quote=FALSE)
write.table(newGT,file='workspace/ikmc_targeting_efficiencies/tables/newGT.csv',sep='\t',col.names=colnames(newGT),quote=FALSE)
ep=read.csv('workspace/ikmc_targeting_efficiencies/tables/epClubs.csv',sep='\t')
ep
ep$MARKER_SYMBOL[1:10]
newGT[1:10]
newGT[1:10,]
which(newGT[1,]==ep$MARKER_SYMBOL)
newGT[1,]==ep$MARKER_SYMBOL
newGT[1,]==ep$MARKER_SYMBOL[1]
newGT[1,]
newGT$gene[1]
newGT$genes[1]
newGT$genes[1]==ep$MARKER_SYMBOL[1]
which(newGT$genes[1]==ep$MARKER_SYMBOL[1])
which(as.character(newGT$genes[1])==as.character(ep$MARKER_SYMBOL[1]))
which(as.character(newGT$genes)==as.character(ep$MARKER_SYMBOL[1]))
which(as.character(newGT$genes[1])==as.character(ep$MARKER_SYMBOL))
#which(as.character(newGT$genes)==as.character(ep$MARKER_SYMBOL[1]))
as.character(newGT$genes)
##which(as.character(newGT$genes)==as.character(ep$MARKER_SYMBOL[1]))
as.character(ep$MARKER_SYMBOL[1])
which(as.character(newGT$genes)=="ITm2a")
which(as.character(newGT$genes)=="Itm2a")
which(as.character(newGT$genes)==Itm2a)
which(newGT$genes=="Itm2a")
which(newGT$genes=="Zzz3")
#which(newGT$genes==epM)
tail)ep$MARKER_SYMBOL,1)
tail(ep$MARKER_SYMBOL,1)
epGenes=sort(ep$MARKER_SYMBOL)
tail(epGenes,1)
which(newGT$genes==tail(epGenes,1))
gt[4224]
length(gt)
gt[15]
savehistory('workspace/ikmc_targeting_efficiencies/codes/5Sep.txt')
